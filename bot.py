import discord
import asyncio
import config
import io
import ipc
import datetime
import requests
import json
import os
from discord.ext import commands, tasks
from discord.ext.commands import Bot
from discord import client
from io import BytesIO
from config import settings
from discord.utils import get

prefix = settings['PREFIX']

intents = discord.Intents.all()

client = commands.Bot(command_prefix=settings['PREFIX'], intents=intents)
client.remove_command("help")

extension = [
	"cogs.giveaway",
	"jishaku"
]

if __name__ == '__main__':
	for extension in extension:
		client.load_extension(extension)

@client.event
async def on_ready():
	print (f"Logged on as {settings['NAME BOT']}")

	await client.change_presence( status = discord.Status.idle, activity=discord.Streaming(name=f';help', url='https://www.twitch.tv/kr3manit'))

'''
@client.command(aliases = ['Help', 'help'])
async def __help ( ctx ):
    emb = discord.Embed( title = '–î–û–°–¢–£–ü–ù–´–ï –ö–û–ú–ê–ù–î–´:', description = '–í–ù–ò–ú–ê–ù–ò–ï! –ë–æ—Ç –µ—â—ë –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!', colour = discord.Color.orange () ) 
    # title - –ñ–∏—Ä–Ω—ã–π –∫—Ä—É–ø–Ω—ã–π —Ç–µ–∫—Å—Ç (–ó–∞–≥–æ–ª–æ–≤–æ–∫) | description - –¢–µ–∫—Å—Ç –ø–æ–¥ –∑–∞–≥–æ–ª–æ–≤–∫–æ–º | colour - –¶–≤–µ—Ç –ø–æ–ª–æ—Å–∫–∏

    emb.set_author( name = ctx.author.name, icon_url = ctx.author.avatar_url )
    # –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç: ctx.author.name - –ò–º—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è, ctx.author.avatar_url - –ê–≤–∞—Ç–∞—Ä –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
    emb.add_field( name = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', value = f'`{prefix}help` `{prefix}time` `{prefix}—Å–µ—Ä–≤–µ—Ä` `{prefix}info` `{prefix}–∞–≤—Ç–æ—Ä—ã` ', inline=False )
    # emb.add_field( name = '–ú–æ–¥–µ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ', value = f'`{prefix}mute` `{prefix}—Ä–∞–∑–º—É—Ç` `{prefix}ban` `{prefix}kick` `{prefix}clear` ', inline=False )
    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã–π –±–ª–æ–∫ —Ç–µ–∫—Å—Ç–∞. name - –ñ–∏—Ä–Ω—ã–π –∫—Ä—É–ø–Ω—ã–π —Ç–µ–∫—Å—Ç | value - –æ–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç –ø–æ–¥ "name" | inline = True - –ë–ª–æ–∫–∏ —Ç–µ–∫—Å—Ç–∞ –±—É–¥—É—Ç –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É (https://prnt.sc/uogw2x) / inline = False - –ë–ª–æ–∫–∏ —Ç–µ–∫—Å—Ç–∞ –±—É–¥—É—Ç –æ–¥–∏–Ω –ø–æ–¥ –¥—Ä—É–≥–∏–º (https://prnt.sc/uogx3t)
    emb.set_thumbnail(url = client.user.avatar_url)
    # emb.set_thumbnail - –î–æ–±–∞–≤–ª—è–µ—Ç –∫–∞—Ä—Ç–∏–Ω–∫—É –æ–∫–æ–ª–æ —Ç–µ–∫—Å—Ç–∞ (–ù–∞–ø—Ä–∏–º–µ—Ä: emb.set_thumbnail(url = "https://icons.iconarchive.com/icons/elegantthemes/beautiful-flat-one-color/128/unlocked-icon.png") (NOAD) –¥–æ–±–∞–≤–∏—Ç –∫–∞—Ä—Ç–∏–Ω–∫—É –∑–∞–º–∫–∞ (https://prnt.sc/uogztb)) | client.user.avatar_url - –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∞–≤–∞—Ç–∞—Ä–∫—É –±–æ—Ç–∞
    emb.set_footer( icon_url = client.user.avatar_url, text = f'{client.user.name} ¬© Copyright 2021 | –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã' )
    # emb.set_thumbnail - –î–æ–±–∞–≤–ª—è–µ—Ç –∫–∞—Ä—Ç–∏–Ω–∫—É –ø–æ–¥ —Ç–µ–∫—Å—Ç–æ–º | client.user.avatar_url - –ê–≤–∞—Ç–∞—Ä–∫–∞ –±–æ—Ç–∞ | ctx.guild.name - –ò–º—è —Å–µ—Ä–≤–µ—Ä–∞

    await ctx.send ( embed = emb)

    print( f'[Logs:info] –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –≤—ã–≤–µ–¥–µ–Ω–∞ | {prefix}help ' )
'''

@client.command()

async def pidors(ctx,member:discord.Member = None, guild: discord.Guild = None):
	await ctx.message.delete()

	emb = discord.Embed( title = '–ì–õ–ê–í–ù–´–ï –ü–ò–î–û–†–ê–°–´ –°–ï–†–í–ï–†–ê', colour = discord.Color.purple() )

	emb.add_field( name = f'–∞—Ä—Ç–µ–º', value = '```–ü–ò–î–û–†```' )
	emb.add_field( name = f'–ø–∏–∫–∞', value = '```–ü–ò–î–û–†```' )
	emb.add_field( name = f'–æ–ª–µ–≥', value = '```–ü–ò–î–û–†```' )
	emb.add_field( name = f'—ç–¥–∏–∫', value = '```–ü–ò–î–û–†```' )
	emb.add_field( name = f'–∞—Ä—Ç–µ–º', value = '```–ü–ò–î–û–†```' )
 	
	await ctx.send( embed = emb )

@client.command()
async def pizdec(ctx):
    await ctx.send('–†–µ–∞–ª—å–Ω–æ –ø–∏–∑–¥–µ—Ü')

#Command help
@client.command( pass_context = True )

async def help( ctx ):
	await ctx.channel.purge( limit = 1 )

	emb = discord.Embed( title = '–ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –∫–æ–º–∞–Ω–¥–∞–º', colour = discord.Color.orange() )

	emb.add_field( name = f'{prefix}clear', value = '```–û—á–∏—Å—Ç–∏—Ç—å —á–∞—Ç```' )
	emb.add_field( name = f'{prefix}kick', value = '```–í—ã–≥–Ω–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞```' )
	emb.add_field( name = f'{prefix}ban', value = '```–ó–∞–±–∞–Ω–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞```' )
	emb.add_field( name = f'{prefix}time', value = '```–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Ä–µ–º—è```' )
	emb.add_field( name = f'{prefix}pidors', value = '```–£–∑–Ω–∞—Ç—å –ø–∏–¥–æ—Ä–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞```' )
	emb.add_field( name = f'{prefix}pizdec', value = '```–ï—â—ë —á—ë —Ç–æ```' )

	await ctx.send( embed = emb )

@client.event

async def on_member_join (member):
    channel = client.get_channel ( 831397576107622420 )

    role = discord.utils.get (member.guild.roles, id=813894164949237820)
    print ('user join the servers')
    await member.add_roles( role )
    await channel.send( embed = discord.Embed( description = f'```xl –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {member.name}, –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –Ω–∞–º!```', color = 0x2D3136))

# Clear message
@client.command( pass_context = True )
@commands.has_permissions( administrator = True )

async def clear( ctx, amount : int ):
	await ctx.channel.purge( limit = amount )

	await ctx.send(embed = discord.Embed(description = f'‚úÖ–£–¥–∞–ª–µ–Ω–æ {amount} —Å–æ–±—â–µ–Ω–∏–π', colour = discord.Color.orange()))
	await ctx.message.delete()

# Kick
@client.command( pass_context = True )
@commands.has_permissions( administrator = True )

async def kick( ctx, member: discord.Member, *, reason = None ):
	await ctx.channel.purge( limit = 1 )

	await member.kick( reason = reason )
	await ctx.send( f'kick user {member.mention}' )

# Ban
@client.command( pass_context = True )
@commands.has_permissions( administrator = True )

async def ban( ctx, member: discord.Member, *, reason = None ):
	emb = discord.Embed( title = '–ë–∞–Ω', colour = discord.Color.red() )
	await ctx.channel.purge( limit = 1 )

	await member.ban( reason = reason )

	emb.set_author( name = member.name, icon_url = member.avatar_url )
	emb.add_field( name = '–ó–∞–±–∞–Ω–Ω–µ–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', value = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {}'.format( member.mention ) )
	emb.set_footer( text = '–ë—ã–ª –∑–∞–±–∞–Ω–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º {}'.format( ctx.author.name ), icon_url = ctx.author.avatar_url )

	now_date = datetime.datetime.now()

	emb.add_field( name = '–í—Ä–µ–º—è –±–∞–Ω–∞', value = 'Time : {}'.format( now_date ) )

	await ctx.send( embed = emb )

	await ctx.sen( f'ban user { member.mention }' )


# UnBan

@client.command( pass_context = True )
async def unban( ctx, *, member ):
	banned_users = await ctx.guild.bans()
	member_name, member_discriminator = member.split('#')

	for ban_entry in banned_users:
		user = ban_entry.user

		if (user.name, user.discriminator) == (member_name, member_discriminator):
			await ctx.guild.unban(user)
			await ctx.send(f'Unbanned {user.mention}')
			return

# Time
@client.command( pass_context = True )

async def time( ctx ):
	emb = discord.Embed( title = '–í—Ä–µ–º—è', colour = discord.Colour.green(), url = 'https://www.timeserver.ru/cities/ru/moscow' )

	emb.set_author( name = client.user.name, icon_url = client.user.avatar_url )
	emb.set_footer( text = '–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞!' )
	emb.set_image( url = 'https://a.allegroimg.com/original/11e121/8662687044ccbb45c47d9bcc760b/Zegar-scienny-29-cm-czarno-bialy-okragly' )

	now_date = datetime.datetime.now()

	emb.add_field( name = 'Time', value = 'Time : {}'.format( now_date ) )

	await ctx.send( embed = emb )



@client.command()
async def info(ctx,member:discord.Member = None, guild: discord.Guild = None):
	await ctx.message.delete()
	if member == None:
		emb = discord.Embed(title="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ", color=ctx.message.author.color)
		emb.add_field(name="–ò–º—è:", value=ctx.message.author.display_name,inline=False)
		emb.add_field(name="–ê–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", value=ctx.message.author.id,inline=False)
		t = ctx.message.author.status
		if t == discord.Status.online:
		    d = "üü¢–í —Å–µ—Ç–∏"

		t = ctx.message.author.status
		if t == discord.Status.offline:
			d = "‚ö™–ù–µ –≤ —Å–µ—Ç–∏"

		t = ctx.message.author.status
		if t == discord.Status.idle:
		    d = "üü†–ù–µ –∞–∫—Ç–∏–≤–µ–Ω"

		t = ctx.message.author.status
		if t == discord.Status.dnd:
		    d = "üî¥–ù–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å"

		emb.add_field(name="–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:", value=d,inline=False)
		emb.add_field(name="–°—Ç–∞—Ç—É—Å:", value=ctx.message.author.activity,inline=False)
		emb.add_field(name="–†–æ–ª—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:", value=f"{ctx.message.author.top_role.mention}",inline=False)
		emb.add_field(name="–ê–∫–∞—É–Ω—Ç –±—ã–ª —Å–æ–∑–¥–∞–Ω:", value=ctx.message.author.created_at.strftime("%a, %#d %B %Y, %I:%M %p"),inline=False)
		emb.add_field(name="–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è:", value=ctx.author.joined_at.strftime("%a, %#d %B %Y, %I:%M %p"),inline=False)
		emb.set_thumbnail(url=ctx.message.author.avatar_url)
		await ctx.send(embed = emb)


@client.command()
@commands.has_permissions( administrator = True )
async def mtm(ctx):
    for channel in ctx.guild.voice_channels:
        for member in channel.members:
            await member.move_to(ctx.author.voice.channel)


# Clear error
@clear.error
async def clear_error( ctx, error ):
	if isinstance( error, commands.MissingRequiredArgument ):
		await ctx.send( f'{ ctx.author.name }, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∂–∏—Ç–µ –∞—Ä–≥—É–º–µ–Ω—Ç!' )

	if isinstance( error, commands.MissingPermissions ):
		await ctx.send( f'{ ctx.author.name }, —É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!' )

# Ban error
@ban.error
async def clear_error( ctx, error ):
	if isinstance( error, commands.MissingRequiredArgument ):
		await ctx.send( f'{ ctx.author.name }, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∂–∏—Ç–µ —á–µ–ª–æ–≤–µ–∫–∞!' )

	if isinstance( error, commands.MissingPermissions ):
		await ctx.send( f'{ ctx.author.name }, —É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!' )

# Kick error
@kick.error
async def clear_error( ctx, error ):
	if isinstance( error, commands.MissingRequiredArgument ):
		await ctx.send( f'{ ctx.author.name }, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∂–∏—Ç–µ —á–µ–ª–æ–≤–µ–∫–∞!' )

	if isinstance( error, commands.MissingPermissions ):
		await ctx.send( f'{ ctx.author.name }, —É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!' )

# Clear.error
@client.event
async def on_command_error( ctx, error ):
	pass



















































#client.run (settings['TOKEN'])
token = os.environ.get('BOT_TOKEN')

client.run(str(token))
